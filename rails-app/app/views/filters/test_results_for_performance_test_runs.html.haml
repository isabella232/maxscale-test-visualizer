.container-fluid
  .row.justify-content-center
    .col-sm-12.col-md-10.col-8
      .row
        .card.width-100
          .card-body
            %form#filtersForm.width-100{:action => performance_test_run_path, :method => "post", 'data-remote' => true}
              .row
                .col
                  .form-group.row
                    .col-3
                      %label{:for => "dbms_select"} Product
                    .col
                      %select#dbms_select.form-control{:multiple => "multiple", :name => "dbms[]"}
                        %option{:value => "All", :selected => option_selected?("All", @selected_filters_values[:dbms])} All
                        - @dbms_options.each do |dbms|
                          %option{:value => dbms, :selected => option_selected?(dbms, @selected_filters_values[:dbms])}
                            = dbms
                  .form-group.row
                    .col-3
                      %label{:for => "test_tool_select"} Test tool
                    .col
                      %select#test_tool_select.form-control{:multiple => "multiple", :name => "test_tool[]"}
                        %option{:value => "All", :selected => option_selected?("All", @selected_filters_values[:test_tool])} All
                        - @test_tool_options.each do |test_tool|
                          %option{:value => test_tool, :selected => option_selected?(test_tool, @selected_filters_values[:test_tool])}
                            = test_tool
                  .form-group.row
                    .col-3
                      %label{:for => "maxscale_source_select"} Maxscale source
                    .col
                      %select#maxscale_source_select.form-control{:multiple => "multiple", :name => "maxscale_source[]"}
                        %option{:value => "All", :selected => option_selected?("All", @selected_filters_values[:maxscale_source])} All
                        - @maxscale_source_options.each do |maxscale_source|
                          %option{:value => maxscale_source.maxscale_source, :selected => option_selected?(maxscale_source.maxscale_source, @selected_filters_values[:maxscale_source])}
                            = maxscale_source.maxscale_source
                  .form-group.row
                    .col-3
                      %label{:for => "jenkins_build_input"} Test run (Jenkins build id)
                    .col
                      %input#jenkins_build_input.form-control{:placeholder => "Example: 5-6, 10-12, 15", :type => "text", :name => "jenkins_build", :value => @selected_filters_values[:jenkins_build]}
                  .form-group.row
                    .col-3
                      %label{:for => "time_interval_dropdown"} Time interval
                    .col
                      %select#time_interval_dropdown.form-control.form-control{:name => "time_interval_dropdown"}
                        %option{value: 1} 1 day
                        %option{value: 2} 2 days
                        %option{value: 5} 5 days
                        %option{value: -1, selected: true} All time
                        %option{value: 0} Set interval
                  .form-group.row#time_interval_form
                    .col-3
                    .col
                      %input#time_interval_start.form-control{:placeholder => "", :type => "date", :name => "time_interval_start", :value => @selected_filters_values[:time_interval_start]}
                    .col
                      %input#time_interval_finish.form-control{:placeholder => "", :type => "date", :name => "time_interval_finish", :value => @selected_filters_values[:time_interval_finish]}


                .col
                  #flashesContainer
                  .form-group
                    .input-group-prepend.align-items-start.justify-content-between
                      .form-check
                        %input.form-check-input{id: "use_sql_query_check", type: "checkbox", value: "true", name: "use_sql_query", checked: !@selected_filters_values[:use_sql_query].nil?}
                        %label.form-check-label{:for => "use_sql_query_check"} Custom Filter
                      %button.btn.btn-sm.btn-link{"data-target" => "#sqlQueryHelpModal", "data-toggle" => "modal", :type => "button"}
                        = ion_icon('help-circled')
                    %textarea#sql_query_textarea.form-control{:rows => "4", :type => "text", :name => "sql_query"}
                      = @selected_filters_values[:sql_query]

              / row with hidden fields (for pagination)
              .row
                %input#pageNum.form-control{:type => 'hidden', :name => "page_num", :value => @selected_filters_values[:page_num]}
                %input#tableColumnsCount.form-control{:type => 'hidden', :name => "table_columns_count", :value => @selected_filters_values[:table_columns_count]}
                %input#tablePagesCount.form-control{:type => 'hidden', :name => "table_pages_count", :value => @selected_filters_values[:table_pages_count]}
                %input#filterPage.form-control{:type => 'hidden', :name => "filter_page", :value => @filter_page}

              .row.align-items-center
                .col
                  %button#submitButton.btn.btn-primary.btn-block{:type => "submit"} Submit

      .row.mt-3
        .col-auto
          = render 'table_pagination'
        .col-auto
          .form-group.row
            %label.col-form-label{:for => "itemsPerPageCountSelect"} Performance test runs per page
            .col
              %select#itemsPerPageCountSelect.form-control.form-control{'data-items-per-page-count' => 20}
                %option{value: 5} 5
                %option{value: 10} 10
                %option{value: 20} 20
                %option{value: 30} 30
                %option{value: 50} 50
        .col-auto
          .form-group.row
            %label#totalCount.col-form-label
              = '(Total count: ' + @filtered_performance_test_runs_count.to_s + ')'
      .row
        .col
          #main-table-container
            = render 'filters/performance_test_result_table'

